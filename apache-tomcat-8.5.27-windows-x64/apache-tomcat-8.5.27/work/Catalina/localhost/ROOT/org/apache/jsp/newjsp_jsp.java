/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.27
 * Generated at: 2018-03-16 04:36:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import newpackage1.NewClass;
import newpackage1.model;

public final class newjsp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("newpackage1.model");
    _jspx_imports_classes.add("newpackage1.NewClass");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <script type=\"application/javascript\">\n");
      out.write("            /*function loader()\n");
      out.write("            {\n");
      out.write("                document.body.style.background=\"black\";\n");
      out.write("            }\n");
      out.write("            function loaderOff()\n");
      out.write("            {\n");
      out.write("                document.getElementsById(\"load\").style.display=\"none\";\n");
      out.write("                document.body.style.backgroundColor=\"white\";\n");
      out.write("            }*/\n");
      out.write("            </script>\n");
      out.write("            <style>\n");
      out.write("                table{\n");
      out.write("    font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n");
      out.write("    border-collapse: collapse;\n");
      out.write("    width: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("td, th {\n");
      out.write("    border: 1px solid #ddd;\n");
      out.write("    padding: 8px;\n");
      out.write("    text-align: left;\n");
      out.write("}\n");
      out.write("\n");
      out.write("tr:nth-child(even){background-color: #f2f2f2;}\n");
      out.write("\n");
      out.write("tr:hover {background-color: pink;}\n");
      out.write("\n");
      out.write("th {\n");
      out.write("    padding-top: 12px;\n");
      out.write("    padding-bottom: 12px;\n");
      out.write("    padding-left:12px;\n");
      out.write("    text-align: center;\n");
      out.write("    background-color: rgb(182, 66, 244);\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button\n");
      out.write("{\n");
      out.write("    border-radius:10px;\n");
      out.write("    background: radial-gradient(yellow, red);\n");
      out.write("    height:30px;\n");
      out.write("    width:200px;\n");
      out.write("}\n");
      out.write("button:hover {\n");
      out.write("    border-radius:10px;\n");
      out.write("    background: radial-gradient(red,yellow);\n");
      out.write("    height:30px;\n");
      out.write("    width:200px;\n");
      out.write("}\n");
      out.write("button:action {\n");
      out.write("    border-radius:10px;\n");
      out.write("    background: radial-gradient(red,yellow);\n");
      out.write("    height:30px;\n");
      out.write("    width:200px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("            </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
 try {
      out.write("\n");
      out.write("        ");

            NewClass.location=request.getParameter("send");
            //NewClass.main();
            String urlLink="https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=";
            String apiKey="&key=AIzaSyDMmcGCdsXxNla6pmZQGr1GyPnGb5mtNf4";
        
      out.write("\n");
      out.write("        <br/>\n");
      out.write("        <br/>\n");
      out.write("        \n");
      out.write("        <table border=\"1\">\n");
      out.write("            <caption><font size=\"+5\">IT Companies In ");
out.print(request.getParameter("send"));
      out.write("</font></caption>\n");
      out.write("           \n");
      out.write("            <th>Name</th>\n");
      out.write("           <th>Address</th>\n");
      out.write("           <th>Map and Photos</th>\n");
      out.write("        ");
 for(model object: NewClass.o) {
      out.write("\n");
      out.write("       <tr>\n");
      out.write("           ");
if(object.name==null)
           {
               
           }
           
      out.write("\n");
      out.write("           <td><b>");
out.print(object.name);
      out.write("</b></td>\n");
      out.write("            <td>");
out.print(object.address);
      out.write("</td>\n");
      out.write("            <td>");
if(object.map!=null)
            {
      out.write("\n");
      out.write("            <form action=\"");
      out.print(object.map);
      out.write("\" target=\"_blank\">\n");
      out.write("                <button type=\"submit\" title=\"Click to see the location in Map\"><b><font color=\"white\" size=\"+1\">Click</font></b></button>\n");
      out.write("            </form>\n");
      out.write("                <form action=\"map.jsp\" target=\"_blank\">\n");
      out.write("                <button type=\"submit\" title=\"Click to see the location in Map\" name=\"p\"><b><font color=\"white\" size=\"+1\">Click</font></b></button>\n");
      out.write("            </form>\n");
      out.write("            ");
}
else{
      out.write("\n");
      out.write("<p>Photos are not avaliable In Google</p>\n");
      out.write("            ");

                }
            
      out.write("\n");
      out.write("            \n");
      out.write("            ");
}
      out.write("\n");
      out.write("            </td>\n");
      out.write("        </tr>\n");
      out.write("        </table>\n");
      out.write("        <h1>Hello World!</h1>\n");
      out.write("        ");
}catch(Exception e)
{
      out.write("\n");
      out.write("    <center><p><font size=\"+2\" color=\"red\">No Companies Found</font></p></center>\n");
}
        
        
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
